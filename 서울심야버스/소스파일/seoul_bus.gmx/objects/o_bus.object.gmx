<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_bus</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gamestart = false;

shakeidx = 0

press = false;

accel = 0;


angleStart = false;
angle = 0;

angle2 = 0;



stopStart = false;

frontDoorOpen = false;
backDoorOpen = false;

collStation = false;

isGo = false;

testtouchnum = -1;


global.curLightCnt = 0;

audio_play_sound( snd_bus_engine, 1,true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///이동 검사. 눌렀을때 가는 버젼.
/*
if( global.clicked == true)
    exit;
    

    
//mouseClicked();   

if( device_mouse_check_button_pressed( 0, mb_left) == true)
{

    if( gamestart == false)
    {
        gamestart = true
        
        
        with( o_ui_heart_info)
        {
            event_user(0);
        }
        with( o_bt_busmap)
        {
            event_user(0);
        }
        
        
        with( o_titlename)
        {
            instance_destroy();
            
        
        }
    }

         
    with( o_front_door)
    {
        other.frontDoorOpen = openState;
    }
    
    
    if( frontDoorOpen == true)
    {
        //frontDoorOpen = false;
        
        busDoorOpen( false);
        
        //exit;
    }
    
    
    with( o_back_door)
    {
        other.backDoorOpen = openState;
    }
    
    if( backDoorOpen == true)
    {
        //frontDoorOpen = false;
        
        busDoorBackOpen( false);
        
        //exit;
    }
    
    


    press = true;
    accel = 0.005;
    
    
    audio_play_sound( snd_bus_start, 2, false);
    
     

   
   // angle = 1.5;
}



//show_debug_message("bus step....");


if ( device_mouse_check_button_released (0, mb_left) == true)
{
    press = false;
    accel = -0.05;
    
    //angle = 0;
    
}





angle = Approach( angle, 0, 0.07);
angle2 = Approach( angle2 , 0, 0.1);

angle = angle + angle2;


var _btVisible = false;
if( instance_exists( o_bt_select_station) == true)
{
    with( o_bt_select_station )
    {
       if( visible== true)
       {
             _btVisible = visible;
            other.accel = 0;         
       }
    }
}


with( o_bt_select )
{
     if( visible== true)
     {
            _btVisible = visible;
            other.accel = 0;       
     }
}


if( press == true &amp;&amp; _btVisible == false)
{
      var _close = false;
     with( o_back_door)
    {
        if( floor(xstart) == floor(x) )
        {
            _close = true;
        }
    }
    

    
     if( _close == true )
    {
        // accel = 0.005;
       // exit;
    
       
               
        stopStart = false;
        
        accel +=  0.003;
        
        if( accel &gt; 0.06&amp;&amp;  angleStart == false)
        {
         
            angleStart = true;
            angle = 1.6;
        }
        
        else if( accel &lt; 0.1 &amp;&amp; angleStart == true)
        {
            angle = 1.0 ;
        }
        
        
        
        if(  accel  &gt;= 5)
            accel =5;
            
    }
}
else if( press == false)
{
    accel -= 0.01;
    if( accel &lt;= -5)
        accel = -5;
        
    
}

if( accel &lt;= 0)
{
    angleStart = false;
}
    
    
global.busSpeed += accel;



if ( global.busSpeed  &lt;= 0)
{
    
    global.busSpeed  = 0;
    
    if( stopStart == false)
    {
        stopStart= true;
        angle2= -0.6;
        
        audio_play_sound( snd_bus_stop, 2, false);
        
        //문열기.
        if( place_meeting(x,y, o_station_front) == true)
        {
            show_debug_message("coll front station");
        
            if( global.busSpeed &lt;= 0)
            {
                
                busDoorOpen( true);
                
                busDoorBackOpen( true);
            }
            
            collStation = true;
        
        }//end if.
        else 
        {
            collStation= false;
        }
        
        
    }
    
    
    audio_stop_sound( snd_bus_go );
    
}
else if( global.busSpeed &gt;= 5)
{
    global.busSpeed = 5;
    
    if( audio_is_playing ( snd_bus_go ) == false)
        audio_play_sound( snd_bus_go, 1, true );
}
else
{
     if( audio_is_playing ( snd_bus_go ) == false)
        audio_play_sound( snd_bus_go, 1, true );
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///이동 검사. 한번 누르면 가는 버젼 
//if( global.clicked == true)
 //   exit;
    

    
//mouseClicked();   


if( instance_exists(objTest) == true )
{
    exit;
    
}


for( var i = 0; i&lt; 5; i++)
{
     if( device_mouse_check_button_pressed( i , mb_any) == true   )
    {
        
        //io_clear();
        
         //show_debug_message("step end bus" + string( _findob) );
    
            //빛을 먹지 못했다면 ... 
        // if( _findob == 0)
        //{
        
       // show_message( "touch device:" + string(i));
       
       testtouchnum = i;
        
        
        var _lightdestroy = false;
        
        var _cnt = 0 ;
        
        
        with( o_buildinglight2)
        {
        
             if( (device_mouse_x(i) &gt;   ( x-sprite_width/2 )&amp;&amp; device_mouse_x(i) &lt;x + sprite_width/2 ) &amp;&amp;
              ( device_mouse_y(i) &gt;  y -sprite_height/2 &amp;&amp; device_mouse_y(i) &lt; y  +sprite_height/2 )   )
            {
                if( _cnt == 0)
                {
                    _cnt +=1;
                    show_debug_message("click o_buildinglight");
                    
                    instance_destroy();
                    
                    //if( type == 0)
                       addHeart(1,x,y-40);
                   // else
                    //    addHeart(-1,x,y-40);
                    
                    event_user(0);
                    
                    _lightdestroy = true;
                    
                    //continue;
                }
                
            }
            
        }
        
        
        
              
        if( gamestart == false)
        {
            gamestart = true
            
            
            with( o_ui_heart_info)
            {
                event_user(0);
            }
            with( o_bt_busmap)
            {
                event_user(0);
            }
            
            with( o_ui_light_info)
            {
                event_user(0);
            }
            
            with( o_titlename)
            {
                instance_destroy();
                
            
            }
            
            with( o_bt_shop)
            {
                //instance_destroy();
               // o_bt_shop
               instance_destroy();
            }
        }
    
             
        if( _lightdestroy== false)
        {
            with( o_front_door)
            {
                other.frontDoorOpen = openState;
            }
            
            
            if( frontDoorOpen == true)
            {
                //frontDoorOpen = false;
                
                busDoorOpen( false);
                
                //exit;
            }
            
            
            with( o_back_door)
            {
                other.backDoorOpen = openState;
            }
            
            if( backDoorOpen == true)
            {
                //frontDoorOpen = false;
                
                busDoorBackOpen( false);
                
                //exit;
            }
            
            
            
            isGo = !isGo;
            show_debug_message("isGo:"+string(isGo));
        
        
            press = true;
            accel = 0.005;
            
            
            audio_play_sound( snd_bus_start, 2, false);
            
        }
        //}
    
        
    }
}


//global.touchedObject  = false;



//show_debug_message("bus step....");


//if ( device_mouse_check_button_released (0, mb_left) == true)
//{
   // press = false;
    ///accel = -0.05;
    
    //angle = 0;
    
//}





angle = Approach( angle, 0, 0.07);
angle2 = Approach( angle2 , 0, 0.1);

angle = angle + angle2;


var _btVisible = false;
if( instance_exists( o_bt_select_station) == true)
{
    with( o_bt_select_station )
    {
       if( visible== true)
       {
             _btVisible = visible;
            other.accel = 0;         
       }
    }
}


with( o_bt_select )
{
     if( visible== true)
     {
            _btVisible = visible;
            other.accel = 0;       
     }
}


//if( press == true &amp;&amp; _btVisible == false)
if( isGo == true &amp;&amp; _btVisible == false)
{
      var _close = false;
     with( o_back_door)
    {
        if( floor(xstart) == floor(x) )
        {
            _close = true;
        }
    }
    

    
     if( _close == true )
    {
        // accel = 0.005;
       // exit;
    
       
               
        stopStart = false;
        
        accel +=  0.003;
        
        if( accel &gt; 0.06&amp;&amp;  angleStart == false)
        {
         
            angleStart = true;
            angle = 1.6;
        }
        
        else if( accel &lt; 0.1 &amp;&amp; angleStart == true)
        {
            angle = 1.0 ;
        }
        
        
        
        if(  accel  &gt;= 5)
            accel =5;
            
    }
}
else if( isGo == false)
{
    accel -= 0.01;
    if( accel &lt;= -5)
        accel = -5;
        
    
}

if( accel &lt;= 0)
{
    angleStart = false;
}
    
    
global.busSpeed += accel;



if ( global.busSpeed  &lt;= 0)
{
    
    global.busSpeed  = 0;
    
    if( stopStart == false)
    {
        stopStart= true;
        angle2= -0.6;
        
        audio_play_sound( snd_bus_stop, 2, false);
        
        //문열기.
        if( place_meeting(x,y, o_station_front) == true)
        {
            show_debug_message("coll front station");
        
            if( global.busSpeed &lt;= 0)
            {
                
                busDoorOpen( true);
                
                busDoorBackOpen( true);
            }
            
            collStation = true;
        
        }//end if.
        else 
        {
            collStation= false;
        }
        
        
    }
    
    
    audio_stop_sound( snd_bus_go );
    
}
else if( global.busSpeed &gt;= 5)
{
    global.busSpeed = 5;
    
    if( audio_is_playing ( snd_bus_go ) == false)
        audio_play_sound( snd_bus_go, 1, true );
}
else
{
     if( audio_is_playing ( snd_bus_go ) == false)
        audio_play_sound( snd_bus_go, 1, true );
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///버스 흔들림.

//if( global.busSpeed != 0)
    shakeY(1.5,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_sprite( s_bus_shadow, 0, x- 3, ystart+ 28);

//draw_self();

draw_sprite_ext(sprite_index, image_index ,x,y, 1,1 ,angle, c_white, 1);



//draw_text( 10,50, "test device:" + string(testtouchnum));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
