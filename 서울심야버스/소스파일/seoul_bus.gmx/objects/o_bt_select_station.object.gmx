<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_uibox1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sceneName = '';

action  = '';


clicked = false;


//alarm[0] = room_speed * 1.2;


startalpha = 0;


shakeidx = 0;
shakestate = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> show_bus_quiz( false);
 

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///quiz.
if( button_click_check_real() == true)
{

    if( device_mouse_check_button_pressed( 0, mb_left) == true)
    {
        io_clear();
        
        if( clicked== true )
            exit ;
            
        if( global.clicked == true)
            exit;
        //mouseClicked();
        
        
        if ( action == 'go')
        {
            global.clicked = true;
             clicked = true;
           if(  global.existStation == 1) //앞으로 나올역.
           {
                show_bus_quiz( false);
                show_busin(true);
                 addHeart( 7 ,156,324);
           }
           else
           {
               
                alarm[0] = room_speed ;
                 
                 
                  addHeart( -1 ,156,324);
                  
                    shake_bus_quiz();
           }
        }
        else if ( action == 'dontgo')
        {
            global.clicked = true;
             clicked = true;
            if(  global.existStation == 0) //없는역 .가짜역 
            {
                 show_bus_quiz( false);
                  //show_busin(true);
                   addHeart( 7 ,156,324);
            }
            else
            {
                 alarm[0] = room_speed ;
                 
                 
                 addHeart( -1 ,156,324);
                 
                 shake_bus_quiz();
            }
        }
        else if ( action == 'reverse') //반대로 타면 나올 역.
        {
            global.clicked = true;
        
             clicked = true;
             if(  global.existStation == 2)
            {
                 show_bus_quiz( false);
                  addHeart( 7 ,156,324);
            }
            else
            {
                
                 alarm[0] = room_speed ;
                 
                 
                 addHeart( -1 ,156,324);
                 
                   shake_bus_quiz();
            }
        }
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///shake
if( sceneName == 'intro')
{

    startalpha= Approach( startalpha, 1, 0.003);

    

}


if( shakestate == true)
{
     shakeY2( 4,2);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( sceneName !='intro')
{

    draw_set_alpha( 0.7);
    draw_set_color(c_black);
    draw_rectangle( x - sprite_xoffset,y -sprite_yoffset ,x -sprite_xoffset + sprite_width, y-sprite_yoffset+ sprite_height, false);
      
    draw_self();
    
}

 draw_set_alpha( 1);

draw_set_font( f_nanum);
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
//draw_set_color( c_white);
draw_set_color(c_yellow);

if( clicked == true)
{
    draw_set_alpha( 0.5);
}
else
{
    draw_set_alpha( 1.0);
}


if( sceneName =='intro')
{
    draw_set_color(c_white);
    
    if( startalpha &lt; 1)
    {
          draw_sprite_ext(sprite_index, image_index, x,y,1,1,0,c_red,startalpha);
      draw_text_ext_colour(x,y-10, "시작하기", 0,100,c_red,c_red,c_red,c_white,startalpha );    

    }
    else
    {
      draw_sprite_ext(sprite_index, image_index, x,y,1,1,0,c_white,startalpha);
      draw_text_ext_colour(x,y-10, "시작하기", 0,100,c_white,c_white,c_white,c_white,startalpha );    
    }
    
        
    
}


if( action == "yellow")
{
    draw_set_color(c_yellow);
    draw_text(x,y, "노란색");
}
else if( action == 'red')
{
    draw_set_color(c_red);
    draw_text(x,y, "빨간색");
}
else if( action == 'green')
{
    draw_set_color(c_green);
    draw_text(x,y, "초록색");
}

else if( action == 'blue')
{
    draw_set_color(c_blue);
    draw_text(x,y, "파란색");
}

else if( action =='stay')
{
     draw_set_color(c_white);
    draw_text(x,y, "기다리기");
}
else if( action =='retry')
{
      draw_set_color(c_white);
    draw_text(x,y, "다시하기");
}
else if ( action == 'sitdown')
{
    //draw_set_color(c_black);
   // draw_rectangle( x - sprite_xoffset,y -sprite_yoffset ,x -sprite_xoffset + sprite_width, y-sprite_yoffset+ sprite_height, false);
      draw_set_color(c_white);
    draw_text(x,y, "착석");
}
else if ( action == 'go')
{
      draw_set_color(c_white);
    draw_text(x,y, "타세요");
}
else if ( action == 'dontgo')
{
  draw_set_color(c_white);
    draw_text(x,y, "안갑니다");
}
else if ( action == 'reverse')
{
draw_set_font( f_nanum8);
  draw_set_color(c_white);
    draw_text(x,y, "반대편에서# 타세요");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
