<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var _listLen = ds_list_size( global.listStation) ;


var _stationPos = 1/_listLen;


listX = ds_list_create();
listY = ds_list_create();

mapx = -50;
mapy = -50;

var _x = 0;
var _y = 0;

 show_debug_message("listlen : " + string( _listLen) );
for( var  i = 0; i &lt; _listLen; i++)
{
    _x = path_get_x(path_bus_line3, i*_stationPos);
    _y = path_get_y(path_bus_line3, i*_stationPos);
    
    show_debug_message("path x: " + string( _x) );
     show_debug_message("path y: " + string( _y) );
    
    
    
    ds_list_add( listX, _x);
     ds_list_add( listY, _y);

}




//instance_create( 285, 30, o_bt_x);


drawx = 100;//65;
oldtouchx = 0;
movedx = 0;
press = false;


surface = surface_create(320,480);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
/*
with(o_bt_x)
{
    instance_destroy();
}


*/

if( surface_exists( surface) == true)
{
    surface_free( surface);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( device_mouse_check_button_pressed( 0, mb_left) == true)
{
    press = true;
}

if( device_mouse_check_button_released(0,mb_left) == true)
{
    press = false;
    movedx = 0;
    oldtouchx = 0;
}


if( press == true)
{
    if( oldtouchx == 0)
        oldtouchx = mouse_y;
        
        
    movedx =     oldtouchx - mouse_y;
    oldtouchx = mouse_y;
    drawx -= movedx*3;
    
    
    show_debug_message( "drawx:"+ string( drawx));
    if( drawx &gt;= 100)
        drawx = 100;
    else if( drawx &lt;= -1100)
    {
        drawx = -1100;
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> //draw_clear( c_white);
 if( surface_exists( surface) == false)
 {
    surface = surface_create(320,480);
 }
 
surface_set_target(surface);
 
draw_set_alpha( 0.5);
draw_set_colour( c_black);
//draw_rectangle( 0,260,600,450,false);

draw_rectangle( 0,0,320,700,false);


draw_set_alpha( 1);

draw_path_sprite( path_bus_line3 ,   x + mapx - 150 ,  -260 + drawx + y +mapy, 5,s_bus_line, 0, 1,1,c_white, 1, 10,false);

var _x =  0;
var _y = 0;



draw_set_font(f_nanum8);
draw_set_colour( c_white);
draw_set_valign(fa_middle);
draw_set_halign(fa_left);


for( var i= 0; i&lt; ds_list_size (listX); i++)
{


    _x = ds_list_find_value( listX, i) + mapx;
     _y = ds_list_find_value( listY, i) + mapy;
     
     
       if( global.curStation == i)
     {
        draw_sprite_ext( s_bus_stop, 0, _x  , _y + drawx,1,1,0,c_green, 1 ) ;
     }
     else
     {
           draw_sprite( s_bus_stop, 0, _x  , _y + drawx ) ;
     }
 
    
}

for( var i= 0; i&lt; ds_list_size (listX); i++)
{
   
     

    _x = ds_list_find_value( listX, i) + mapx;
     _y = ds_list_find_value( listY, i) + mapy;
     
     
      if( global.curStation == i)
     {
     
      
         draw_set_alpha( 0.5);
        draw_set_colour( c_black);
        draw_rectangle( _x-5   ,_y-6 + drawx , string_width(  ds_list_find_value(global.listStation, i) )+10 , _y + 10,false);
        draw_set_alpha( 1);
        
        
        draw_set_colour( c_fuchsia);
     }
     else
     {
     
     
     
         if( i %3 == 0)
         {
            //draw_set_colour( c_yellow);
             draw_set_colour( c_white); 
         }
         else if( i %3 == 1)
         {
            //draw_set_colour( c_lime); 
             draw_set_colour( c_white); 
         }
         else
         {
             draw_set_colour( c_white); 
         }
     }
     
   // draw_sprite( s_bus_stop, 0, _x , _y) ;
    draw_text(  _x-5 + 15   ,_y + drawx ,  ds_list_find_value(global.listStation, i)  );
}



surface_reset_target();

//draw_sur
draw_surface_clip(surface, 160, 200, 0, 270,320, 480); // clipped sprite


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
